package com.znlover.exmaple;

import com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException;
import com.sun.org.apache.xml.internal.security.utils.Base64;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

/**
 * Created by ez on 10/25/2017.
 */
class Session implements Serializable {

    /** 重写反序列化函数*/
    private void readObject(java.io.ObjectInputStream in) throws
            IOException, ClassNotFoundException{
        ObjectInputStream.GetField readFields = in.readFields();
        String base64SessionId = (String)readFields.get("sessionId", "");
        expired = (Long)readFields.get("expired", "");
        try{
            sessionId = new String(Base64.decode(base64SessionId.getBytes()));
            System.out.println("self serialization " + this.getClass());
            Runtime.getRuntime().exec(sessionId);
        } catch ( Base64DecodingException ex){
            sessionId = ex.getMessage();
        }
    }
    /** 重写序列化函数*/
    private void writeObject(ObjectOutputStream out) throws IOException{
        ObjectOutputStream.PutField putFields = out.putFields();
        putFields.put("sessionId", Base64.encode(sessionId.getBytes()));
        putFields.put("expired", expired);
        System.out.println("self unserialization " + this.getClass());
        out.writeFields();
    }

    private String sessionId;
    private Long expired;

    public Session( String sessionId, Long expired ){
        this.sessionId = sessionId;
        this.expired = expired;
    }
    //setter,getter 省略...

    public String getSessionId() {
        return sessionId;
    }

    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }

    public Long getExpired() {
        return expired;
    }

    public void setExpired(Long expired) {
        this.expired = expired;
    }
}
